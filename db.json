{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"themes/archer/source/assets/algolia_logo.svg","path":"assets/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/archer/source/assets/favicon.ico","path":"assets/favicon.ico","modified":1,"renderable":1},{"_id":"themes/archer/source/assets/example_qr.png","path":"assets/example_qr.png","modified":1,"renderable":1},{"_id":"themes/archer/source/assets/loading.svg","path":"assets/loading.svg","modified":1,"renderable":1},{"_id":"themes/archer/source/css/mobile.css","path":"css/mobile.css","modified":1,"renderable":1},{"_id":"themes/archer/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/archer/source/font/Source Sans Pro.woff","path":"font/Source Sans Pro.woff","modified":1,"renderable":1},{"_id":"themes/archer/source/font/Source Sans Pro.woff2","path":"font/Source Sans Pro.woff2","modified":1,"renderable":1},{"_id":"themes/archer/source/scripts/main.js","path":"scripts/main.js","modified":1,"renderable":1},{"_id":"themes/archer/source/lib/webfontloader.min.js","path":"lib/webfontloader.min.js","modified":1,"renderable":1},{"_id":"themes/archer/source/scripts/search.js","path":"scripts/search.js","modified":1,"renderable":1},{"_id":"themes/archer/source/scripts/share.js","path":"scripts/share.js","modified":1,"renderable":1},{"_id":"themes/archer/source/avatar/Suzumiya.jpg","path":"avatar/Suzumiya.jpg","modified":1,"renderable":1},{"_id":"themes/archer/source/font/Oswald-Regular.ttf","path":"font/Oswald-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff","path":"font/SourceCodePro-Regular.ttf.woff","modified":1,"renderable":1},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff2","path":"font/SourceCodePro-Regular.ttf.woff2","modified":1,"renderable":1},{"_id":"themes/archer/source/intro/404-bg.jpg","path":"intro/404-bg.jpg","modified":1,"renderable":1},{"_id":"themes/archer/source/lib/jquery.min.js","path":"lib/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/archer/source/intro/about-bg.jpg","path":"intro/about-bg.jpg","modified":1,"renderable":1},{"_id":"themes/archer/source/intro/post-bg.jpg","path":"intro/post-bg.jpg","modified":1,"renderable":1},{"_id":"themes/archer/source/intro/index-bg.jpg","path":"intro/index-bg.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/archer/.eslintrc.json","hash":"35eeca97fa5a2d0c6d78ef1257c58f03c42d43df","modified":1580365563327},{"_id":"themes/archer/.gitattributes","hash":"82c1a621642d5b620275ae1ed59845c3f7015a64","modified":1580365563299},{"_id":"themes/archer/._config.yml.swp","hash":"151ce3ced2366a277aeeefeadf83d89c6f9e3ff3","modified":1580366024101},{"_id":"source/404.md","hash":"aa3653d7c20950b77042081990d42405d01406b1","modified":1580365563236},{"_id":"themes/archer/.gitignore","hash":"e2d7fa953bade3b94ed1cab25ffcf442c7540433","modified":1580365563292},{"_id":"themes/archer/LICENSE","hash":"0da0c361bf299375739c6b668a44af0f5faf37bb","modified":1580365563238},{"_id":"themes/archer/.prettierrc.js","hash":"875b0b95f6eb24a23e4ea83a75709b97897135e0","modified":1580365563296},{"_id":"themes/archer/.prettierignore","hash":"58caf761f07e5df9cdc21f7f19f0670fde41089b","modified":1580365563290},{"_id":"themes/archer/README.md","hash":"97edb54cb7aecff714f132110ed4ba8215da7136","modified":1580365563291},{"_id":"themes/archer/_config.yml","hash":"be5de04ab0cebff208024b5d577fa26910523326","modified":1580366016089},{"_id":"themes/archer/package.json","hash":"531fe40833ca63493f62adfa249b6434310a2d0a","modified":1580365563294},{"_id":"themes/archer/gulpfile.js","hash":"46dfe693b00ac4dea4d1b1af56f5ced4ee095c10","modified":1580365563300},{"_id":"themes/archer/webpack.config.js","hash":"d20b6350c50e2981484cb9356a3e21a2124bcd72","modified":1580365563285},{"_id":"themes/archer/webpack.prod.js","hash":"48de76cfa6274895801d3afc89ecbf04ee182a1c","modified":1580365563296},{"_id":"source/_posts/基于Hexo和github-page搭建个人博客.md","hash":"f05a597fb49d6d6ebced643c227308a1f6f538db","modified":1580365563234},{"_id":"source/about/index.md","hash":"a3c035e92a5638c599ea66a114a93f1b2d69d569","modified":1580365563235},{"_id":"themes/archer/dev/archer.sh","hash":"4065c4e55462d5ecf016464adea0d1db967ef4b4","modified":1580365563301},{"_id":"themes/archer/docs/README-en.md","hash":"f325565c0bb94501fd046268659c7752709895d1","modified":1580365563289},{"_id":"themes/archer/docs/develop-guide-en.md","hash":"0bb09c3c9d5f56820cb84e3316f60352b731d70c","modified":1580365563286},{"_id":"themes/archer/docs/develop-guide-zh.md","hash":"effc2bc9e0cecfd228b19283337ff29649ea5985","modified":1580365563285},{"_id":"themes/archer/languages/default.yml","hash":"d56b6923c70efdef09cd1f0270d7adc9cc338f6b","modified":1580365563290},{"_id":"themes/archer/languages/en.yml","hash":"ad75d3e5f7f5f0463d3077e1b5a26f40938a1faa","modified":1580365563291},{"_id":"themes/archer/layout/404.ejs","hash":"879641b1b5e49c43f2e096cad281f7d74df05127","modified":1580365563240},{"_id":"themes/archer/layout/index.ejs","hash":"716ba4a30860e36077dfdfffa02c1cd60301d8a3","modified":1580365563241},{"_id":"themes/archer/layout/about.ejs","hash":"06019d835c0a51fed8aa086d1dfcf368f9921b42","modified":1580365563245},{"_id":"themes/archer/layout/layout.ejs","hash":"08ebd10c1b2bfc11be8f5115a836a98e6c6ba13c","modified":1580365563242},{"_id":"themes/archer/layout/post.ejs","hash":"b61156aff41641a14d5e4e45d9fd776309f2801a","modified":1580365563240},{"_id":"themes/archer/layout/site-meta.ejs","hash":"d866aa1a892d4bfe3368f6dbd0f1baa8c5831947","modified":1580365563243},{"_id":"themes/archer/.github/ISSUE_TEMPLATE/-----------bug--help-wanted-or-bug-report-.md","hash":"012bd3afea5565204f75d8c89048ad33b9c2f948","modified":1580365563298},{"_id":"themes/archer/.github/ISSUE_TEMPLATE/-----feature-request-.md","hash":"886fb1252702d46c89536b579d35ce49e53ec54d","modified":1580365563298},{"_id":"themes/archer/.github/ISSUE_TEMPLATE/-----other-issue-.md","hash":"4bf3c8ebef14a81bb55e8e0468d816e83c4133ac","modified":1580365563299},{"_id":"themes/archer/layout/_partial/algolia.ejs","hash":"2f5f9073378f628a9124792b5301c1540bc5a264","modified":1580365563250},{"_id":"themes/archer/layout/_partial/base-background-image.ejs","hash":"82203d9a1c6e16ef2d37b8b587f56bf6d16edaf2","modified":1580365563260},{"_id":"themes/archer/layout/_partial/base-footer.ejs","hash":"7bfb8af21f7d30780d1a3af5484760b07b4fbb1d","modified":1580365563250},{"_id":"themes/archer/layout/_partial/base-head.ejs","hash":"f2e8d4dfd11d879491a4b10f74f8c886cd392240","modified":1580365563259},{"_id":"themes/archer/layout/_partial/base-header.ejs","hash":"12e28693dc53cab5f6fd389f15ea0f811c9c37e9","modified":1580365563250},{"_id":"themes/archer/layout/_partial/base-preload-polyfill.ejs","hash":"2aea84cb43f4479131620b3c3dfd7cebe9be36ba","modified":1580365563251},{"_id":"themes/archer/layout/_partial/base-profile.ejs","hash":"743d97452d4ac358e631c43c9c2120aafdfd3e24","modified":1580365563257},{"_id":"themes/archer/layout/_partial/base-social.ejs","hash":"2d068432031b3bebf9438c775370a2d1b4492d6b","modified":1580365563257},{"_id":"themes/archer/layout/_partial/base-title-tags.ejs","hash":"418559ab11726f69621c3a58cd21903adff1e48e","modified":1580365563258},{"_id":"themes/archer/layout/_partial/intro-height.ejs","hash":"cd0d34a811dc4666980d57c00d70dd82bd5450eb","modified":1580365563256},{"_id":"themes/archer/source/assets/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1580365563283},{"_id":"themes/archer/source/assets/favicon.ico","hash":"933a804f4cf7a82e2039f340fe6bc3d5f413938e","modified":1580365563283},{"_id":"themes/archer/source/assets/example_qr.png","hash":"cce20432c34875f4d9c6df927ede0fc0f00bb194","modified":1580365563284},{"_id":"themes/archer/source/assets/loading.svg","hash":"45be17d07697d604d8981890eb21e308530c7a38","modified":1580365563284},{"_id":"themes/archer/source/avatar/.DS_Store","hash":"3e20bdd95c99735019db564ba59ba7267d2eb8be","modified":1580365563275},{"_id":"themes/archer/source/css/mobile.css","hash":"51d7b5cf26c8f82a3daad4bc55518673fdf281f5","modified":1580365563272},{"_id":"themes/archer/source/css/style.css","hash":"5d5e869db0c62957d59c6865baaecd1428c51804","modified":1580365563270},{"_id":"themes/archer/source/font/Source Sans Pro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1580365563281},{"_id":"themes/archer/source/font/Source Sans Pro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1580365563281},{"_id":"themes/archer/source/intro/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1580365563263},{"_id":"themes/archer/source/scripts/main.js","hash":"e89a9651131684204118fa74bd19cb781d76a372","modified":1580365563273},{"_id":"themes/archer/source/lib/webfontloader.min.js","hash":"bc6ffe9c0d8b3285564619a445c6ca575eb9d0f5","modified":1580365563277},{"_id":"themes/archer/source/scripts/search.js","hash":"d5f739e261e8ce74f993c6157b248663bda122bf","modified":1580365563273},{"_id":"themes/archer/source/scripts/share.js","hash":"bb5bb37ce7f47f8c084b232df3e5fe2378d7ca01","modified":1580365563274},{"_id":"themes/archer/src/js/browser.js","hash":"ce061db99db5b880db0ddb768246352ca885b13c","modified":1580365563335},{"_id":"themes/archer/src/js/fancybox.js","hash":"0daf0e83deca055102268e3bd95cb1962acc2264","modified":1580365563329},{"_id":"themes/archer/src/js/init.js","hash":"346c6ef75ae85e4350c1b0811985172fdaa0d3a5","modified":1580365563333},{"_id":"themes/archer/src/js/initSidebar.js","hash":"b25615ff254913db83e2a20263d445f35083843b","modified":1580365563334},{"_id":"themes/archer/src/js/main.js","hash":"e1a48d5822326792e38d44efee86e01473549eba","modified":1580365563333},{"_id":"themes/archer/src/js/mobile.js","hash":"228a68d851517b5e47d2132f1d499cb812a64171","modified":1580365563329},{"_id":"themes/archer/src/js/scroll.js","hash":"aa2315a80daaa183a7e462c7e879ff9d2f050933","modified":1580365563330},{"_id":"themes/archer/src/js/search.js","hash":"2e59ac745da7c22801d9029cf9904a4fc3c384f1","modified":1580365563335},{"_id":"themes/archer/src/js/share.js","hash":"1314b19a852e291e35d6809f7f58652d3e7c524c","modified":1580365563336},{"_id":"themes/archer/src/js/sidebar.js","hash":"68d5fe0ee5e86df810d304e5efe11e5e1fddc46d","modified":1580365563332},{"_id":"themes/archer/src/js/toc.js","hash":"b3482031e4c8728535d480bfaec76229469e3aba","modified":1580365563331},{"_id":"themes/archer/src/js/tag.js","hash":"e0f0a914c02922e42977d78dc4993b3855167cd8","modified":1580365563334},{"_id":"themes/archer/src/js/util.js","hash":"27de6446892bcf399430dd5776df0b8759ca0eea","modified":1580365563331},{"_id":"themes/archer/src/scss/_common.scss","hash":"dedc313b082e0a16daf87213badd21b13be11af8","modified":1580365563339},{"_id":"themes/archer/src/scss/_mixin.scss","hash":"e7deb20a16868ae9d3e35ba3c5693de71fdf6999","modified":1580365563337},{"_id":"themes/archer/src/scss/_normalize.scss","hash":"a2dbeb38ad08bb8975856d75954cc697bf8e5ff7","modified":1580365563347},{"_id":"themes/archer/src/scss/_variables.scss","hash":"136e5d990c4f8eadf6cabdfa5a053941e90bcd20","modified":1580365563337},{"_id":"themes/archer/src/scss/mobile.scss","hash":"aadc2fbf37fefc2ad391d8172d5b61817f9db0c5","modified":1580365563338},{"_id":"themes/archer/src/scss/style.scss","hash":"78e31370d45089b97fa91929345f1a29f2e6a0a2","modified":1580365563338},{"_id":"themes/archer/layout/_partial/comment/custom.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1580365563254},{"_id":"themes/archer/source/avatar/Suzumiya.jpg","hash":"e45598c5821756547a36d58258a44bc0593b59a9","modified":1580365563276},{"_id":"themes/archer/source/font/Oswald-Regular.ttf","hash":"965d729546a43a8490ad4cf33c25ac475682100c","modified":1580365563282},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff","hash":"12eef75e1ad3eca9dae42b65505010ce4464a315","modified":1580365563280},{"_id":"themes/archer/source/font/SourceCodePro-Regular.ttf.woff2","hash":"f5991289ec17884cb641da0646d278d36702a190","modified":1580365563279},{"_id":"themes/archer/source/intro/404-bg.jpg","hash":"3afb5bb26f4ff0bd0e0a28df955c8aa7d746d3c5","modified":1580365563269},{"_id":"themes/archer/source/lib/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1580365563278},{"_id":"themes/archer/layout/_partial/comment/changyan.ejs","hash":"7691642fb9375607e0ac988a7420999e242cb2c9","modified":1580365563253},{"_id":"themes/archer/layout/_partial/comment/disqus.ejs","hash":"cadd97820a23d01d8b7e2f19a86e5290cef5a8a6","modified":1580365563253},{"_id":"themes/archer/layout/_partial/comment/gitment.ejs","hash":"794647a8a4ac9e1d01d74c07717175a141b1e01c","modified":1580365563256},{"_id":"themes/archer/layout/_partial/comment/livere.ejs","hash":"b27469f19f35ec2037c7bce736a12e9dfb5e360b","modified":1580365563255},{"_id":"themes/archer/layout/_partial/comment/valine.ejs","hash":"2154360e330dab94540e168e9d301c7b7091968e","modified":1580365563254},{"_id":"themes/archer/layout/_partial/comment/youyan.ejs","hash":"790d76f2667377db78a7d04bad8d629e47e7aab0","modified":1580365563255},{"_id":"themes/archer/layout/_partial/critical-css/critical-style.ejs","hash":"c03e16a7741908c207bf58363dcd1349cb639ef8","modified":1580365563252},{"_id":"themes/archer/layout/_partial/script/font-loader.ejs","hash":"291cc0a4a444a93b93c32e2c39383c70e36e46de","modified":1580365563258},{"_id":"themes/archer/layout/_partial/sidebar/base-sidebar.ejs","hash":"2d38af7cb5aabc0af99de239bd180c516ec4c56c","modified":1580365563249},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-archives.ejs","hash":"daa78b17a773bca569f1c8ca2c916495ca138da6","modified":1580365563248},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-categories.ejs","hash":"147214469c4909eb94943599883f9fa0f3cc090d","modified":1580365563247},{"_id":"themes/archer/layout/_partial/sidebar/sidebar-tags.ejs","hash":"d6e1a192cac5dcf365ce1a52df4f23feafeeb849","modified":1580365563249},{"_id":"themes/archer/src/scss/_partial/_404.scss","hash":"a2b56f441a9a44d7f5b9b41eaa8136321328d7e9","modified":1580365563339},{"_id":"themes/archer/src/scss/_partial/_algolia.scss","hash":"c679578d2feb0bd7d3f80c2f693ba58cbca4428b","modified":1580365563341},{"_id":"themes/archer/src/scss/_partial/_index-page.scss","hash":"fa993cf0bbe0086cd8ec3d9a639b2d5b28ccfa8e","modified":1580365563341},{"_id":"themes/archer/src/scss/_partial/_post-page.scss","hash":"7c557844850d53cc4fc36aaf6d59847d8f238947","modified":1580365563341},{"_id":"themes/archer/package-lock.json","hash":"89a3b67d32f6916cdc21d590d87e43d8a44be8c3","modified":1580365563293},{"_id":"themes/archer/docs/snap.png","hash":"0b2a8bf016f6eed576abfdcdb7dcf8de51c12562","modified":1580365563288},{"_id":"themes/archer/source/intro/about-bg.jpg","hash":"ab388276822417cc4e703312c14e20280ec783b3","modified":1580365563262},{"_id":"themes/archer/src/scss/_partial/_partial/_footer.scss","hash":"726c543ee066e0b3222b236d9b4ef0109c0bdddf","modified":1580365563344},{"_id":"themes/archer/src/scss/_partial/_partial/_header.scss","hash":"77003ff22b1a10fae2d2768938277959b3f93a72","modified":1580365563345},{"_id":"themes/archer/src/scss/_partial/_partial/_intro.scss","hash":"a1569f39eccd64a12425d81b794c53df126a4d87","modified":1580365563342},{"_id":"themes/archer/src/scss/_partial/_partial/_paginator.scss","hash":"67c2e697a5fbb3b8006cf358ea45eb7f75b496f8","modified":1580365563343},{"_id":"themes/archer/src/scss/_partial/_partial/_profile.scss","hash":"0c986b52ce9083f08c37c5c9b5de045ac5e1d2fa","modified":1580365563343},{"_id":"themes/archer/src/scss/_partial/_partial/_scrollbar.scss","hash":"f2514031f9d7e4ed4a126694e78618ce6ff3a574","modified":1580365563344},{"_id":"themes/archer/src/scss/_partial/_post/_code.scss","hash":"9c9a4e470da8732c9a3be3d5ce0d2f80f53714fe","modified":1580365563340},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar-archive.scss","hash":"14bc42292873880c61b5fa9f47ee9d2e08d46871","modified":1580365563346},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar.scss","hash":"981a94978535769cb51c29e12b627f83c6fcedc5","modified":1580365563346},{"_id":"themes/archer/src/scss/_partial/_sidebar/_sidebar-tags.scss","hash":"9ab6f96d0df0c4ad4c72e2515fa2599d487d8f1a","modified":1580365563345},{"_id":"themes/archer/source/intro/post-bg.jpg","hash":"96b52e177b8bc53e64ec6ee1e10b2b6a4e13083b","modified":1580365563267},{"_id":"themes/archer/source/intro/index-bg.jpg","hash":"96b52e177b8bc53e64ec6ee1e10b2b6a4e13083b","modified":1580365563265},{"_id":"public/atom.xml","hash":"39003c61bdacb3dddb95c30ea94900395154d4cf","modified":1580366147757},{"_id":"public/404.html","hash":"f103f8a2dd45376c9bdf4e4f4181a63971653d7b","modified":1580366147757},{"_id":"public/about/index.html","hash":"956cea391cea8ff257a8794b2996b29f9bb35b09","modified":1580366147757},{"_id":"public/2020/01/29/基于Hexo和github-page搭建个人博客/index.html","hash":"5ef34554e3b71bfada66b7d6b7aca81553e3d3f1","modified":1580366147757},{"_id":"public/archives/index.html","hash":"26af81daaae2a7911fb96e0315ae9b6645265409","modified":1580366147757},{"_id":"public/archives/2020/index.html","hash":"26af81daaae2a7911fb96e0315ae9b6645265409","modified":1580366147757},{"_id":"public/archives/2020/01/index.html","hash":"26af81daaae2a7911fb96e0315ae9b6645265409","modified":1580366147757},{"_id":"public/index.html","hash":"9edf959d511c69e56d8c920c6b14e082f4fbcb8b","modified":1580366147757},{"_id":"public/tags/小白/index.html","hash":"26af81daaae2a7911fb96e0315ae9b6645265409","modified":1580366147757},{"_id":"public/assets/favicon.ico","hash":"933a804f4cf7a82e2039f340fe6bc3d5f413938e","modified":1580366147757},{"_id":"public/assets/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1580366147757},{"_id":"public/assets/example_qr.png","hash":"cce20432c34875f4d9c6df927ede0fc0f00bb194","modified":1580366147757},{"_id":"public/assets/loading.svg","hash":"45be17d07697d604d8981890eb21e308530c7a38","modified":1580366147757},{"_id":"public/font/Source Sans Pro.woff","hash":"a6722c9b6439b7a020a9be3d3178970757a9265c","modified":1580366147757},{"_id":"public/font/Source Sans Pro.woff2","hash":"da65f527a8da65d5eb6721626d28cfdb46ab104a","modified":1580366147757},{"_id":"public/font/SourceCodePro-Regular.ttf.woff2","hash":"f5991289ec17884cb641da0646d278d36702a190","modified":1580366147757},{"_id":"public/avatar/Suzumiya.jpg","hash":"e45598c5821756547a36d58258a44bc0593b59a9","modified":1580366147757},{"_id":"public/intro/404-bg.jpg","hash":"3afb5bb26f4ff0bd0e0a28df955c8aa7d746d3c5","modified":1580366147757},{"_id":"public/font/SourceCodePro-Regular.ttf.woff","hash":"12eef75e1ad3eca9dae42b65505010ce4464a315","modified":1580366147757},{"_id":"public/font/Oswald-Regular.ttf","hash":"965d729546a43a8490ad4cf33c25ac475682100c","modified":1580366147757},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1580366147757},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1580366147757},{"_id":"public/css/mobile.css","hash":"51d7b5cf26c8f82a3daad4bc55518673fdf281f5","modified":1580366147757},{"_id":"public/scripts/search.js","hash":"d5f739e261e8ce74f993c6157b248663bda122bf","modified":1580366147757},{"_id":"public/lib/webfontloader.min.js","hash":"bc6ffe9c0d8b3285564619a445c6ca575eb9d0f5","modified":1580366147757},{"_id":"public/css/style.css","hash":"5d5e869db0c62957d59c6865baaecd1428c51804","modified":1580366147757},{"_id":"public/scripts/share.js","hash":"bb5bb37ce7f47f8c084b232df3e5fe2378d7ca01","modified":1580366147757},{"_id":"public/scripts/main.js","hash":"e89a9651131684204118fa74bd19cb781d76a372","modified":1580366147757},{"_id":"public/lib/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1580366147757},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1580366147757},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1580366147757},{"_id":"public/intro/about-bg.jpg","hash":"ab388276822417cc4e703312c14e20280ec783b3","modified":1580366147757},{"_id":"public/intro/post-bg.jpg","hash":"96b52e177b8bc53e64ec6ee1e10b2b6a4e13083b","modified":1580366147757},{"_id":"public/intro/index-bg.jpg","hash":"96b52e177b8bc53e64ec6ee1e10b2b6a4e13083b","modified":1580366147757}],"Category":[],"Data":[],"Page":[{"title":"Ops, you got a 404 surprise!","layout":"404","description":"May the Force be with you :&#41;","_content":"\n","source":"404.md","raw":"---\ntitle: Ops, you got a 404 surprise!\nlayout: 404\ndescription: \"May the Force be with you :&#41;\"\n---\n\n","date":"2020-01-30T06:26:03.236Z","updated":"2020-01-30T06:26:03.236Z","path":"404.html","comments":1,"_id":"ck60d785n0000dipofpid5cnr","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"About Me","date":"2020-01-29T16:43:30.000Z","layout":"about","_content":"\nI'm interested in *Programming Language*, *Compiler Technology*, any hacking technology and sharing of course. In this blog, topics will not be limited, so tags will help to choose any thing interests you to read. Suggestions and comments are very welcome. Enjoy yourself.\n\n---\n\nTo do list for this site:\n\n* [ ] add comment system\n* [ ] feel a little bit uncomfortable for the base64 encoded URL shown at the end of the post when the title of blog is in chinese","source":"about/index.md","raw":"---\ntitle: About Me\ndate: 2020-01-30 00:43:30\nlayout: about\n---\n\nI'm interested in *Programming Language*, *Compiler Technology*, any hacking technology and sharing of course. In this blog, topics will not be limited, so tags will help to choose any thing interests you to read. Suggestions and comments are very welcome. Enjoy yourself.\n\n---\n\nTo do list for this site:\n\n* [ ] add comment system\n* [ ] feel a little bit uncomfortable for the base64 encoded URL shown at the end of the post when the title of blog is in chinese","updated":"2020-01-30T06:26:03.235Z","path":"about/index.html","comments":1,"_id":"ck60d786m0002dipoh6d051rj","content":"<p>I’m interested in <em>Programming Language</em>, <em>Compiler Technology</em>, any hacking technology and sharing of course. In this blog, topics will not be limited, so tags will help to choose any thing interests you to read. Suggestions and comments are very welcome. Enjoy yourself.</p>\n<hr>\n<p>To do list for this site:</p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> add comment system</li>\n<li><input disabled=\"\" type=\"checkbox\"> feel a little bit uncomfortable for the base64 encoded URL shown at the end of the post when the title of blog is in chinese</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>I’m interested in <em>Programming Language</em>, <em>Compiler Technology</em>, any hacking technology and sharing of course. In this blog, topics will not be limited, so tags will help to choose any thing interests you to read. Suggestions and comments are very welcome. Enjoy yourself.</p>\n<hr>\n<p>To do list for this site:</p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> add comment system</li>\n<li><input disabled=\"\" type=\"checkbox\"> feel a little bit uncomfortable for the base64 encoded URL shown at the end of the post when the title of blog is in chinese</li>\n</ul>\n"}],"Post":[{"title":"基于Hexo和github page搭建个人博客","date":"2020-01-29T11:46:47.000Z","_content":"\n倒腾过好几次个人主页，但个人原创文章并不多，总是要么在换模板的路上，要不就是在换框架的路上，终于乐此而疲了。这次换个人主页之后还是要静下心来多写文章才是。这篇文章用于答谢Hexo和Archer主题的作者，hexo是到目前为止用过的最好用的博客框架，archer主题模板是目前个人比较喜欢的一款模版。\n\n废话不多说，按照个人习惯，分四段简单介绍下如何基于Hexo和Github Page搭建个人主页。\n\n> 本文不严格区分*nix系统和windows系统，所有命令均可在terminal或者gitbash中执行。\n\n## 0x00 准备\n\nhexo是一个静态站点生成工具，集创建（初始化站点）、开发（指的是写博客）、发布博客文章功能于一体，十分方便。\n\n搭建博客站点先准备以下平台的账号和开发环境：\n\n- 注册github账户，[链接](https://github.com/)\n\n- 安装git，并在github账户中配置sshkey：*nix系统一般自带git，windows系统安装gitbash，[下载地址](https://gitforwindows.org/)\n\n- 配置sshkey：\n\n  - 生成sshkey：*nix系统中打开terminal，windows系统中打开gitbash，参考[教程](https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh)，执行以下命令，\n\n    ```bash\n    cd ~ && ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" # your_email@example.com替换为你注册github的邮箱，可以一直按回车生成默认的文件名，方便阅读后续的步骤\n    ```\n\n  - 执行以下命令，拷贝出你的public key，将屏幕中输出的公钥内容`ctrl+c`进行拷贝：\n\n    ```bash\n    cd ~/.ssh/ && cat id_rsa.pub # 这里的id_rsa.pub为上一步生成的密钥对中的公钥\n    ```\n\n  - 打开github中配置sshkey的界面，[链接](https://github.com/settings/keys)，选择`New SSH key`，把拷贝的公钥配置上去即可。\n\n- 安装Nodejs，[下载地址](https://nodejs.org/zh-cn/)，安装成功后会同时安装好node和npm两个工具，并为npm配置国内源，例如配置淘宝源可以执行下述命令：\n\n  ```bash\n  npm config set registry https://registry.npm.taobao.org\n  ```\n\n- 安装hexo，执行下述命令\n\n  ```bash\n  npm install hexo-cli -g # install hexo\n  hexo -v # check whether successfully installed\n  ```\n\n## 0x01 初始化站点\n\n执行以下命令来初始化博客站点，会创建一个新的目录，以blog-dev为例，执行：\n\n```bash\nhexo init blog-dev\n```\n\n待命令执行完毕，会新建一个blog-dev目录，进入该目录中，我们可以看到以下目录树：\n\n```bash\nblog-dev\n├── _config.yml        #---------------- 站点配置文件\n├── node_modules       #---------------- npm安装包本地保存目录\n├── package-lock.json\n├── package.json       #---------------- 依赖包配置文件\n├── scaffolds\n├── source             #---------------- 博客文章保存目录\n└── themes             #---------------- 博客主题保存目录\n```\n\n此时，进入到blog-dev目录，可以执行hexo的相关参数及命令，可以进行站点的管理，简单介绍如下：\n\n```bash\nhexo clean # 清除缓存\nhexo generate # 生成网站静态文件\nhexo server # 启动本地调试模式，默认可以打开localhost:4000查看网站效果\nhexo deploy # 发布到GitHub Page，第0x11节会具体介绍\n```\n\nhexo还有一个非常方便的点是主题套用十分方便，将想要的模板下载下来，放到themes目录下，然后修改_config.yml文件中的theme字段，改为下载下来的主题目录名即可。主题可以在[官方网站下载](https://hexo.io/themes/)，也可以自行从各种渠道获取。\n\n## 0x10 创建github page\n\n本节内容大家应该都比较熟悉，创建作为个人主页用的github page，必须将仓名命名为username.github.com，经过测试，仓名中的username与你的github账号名可以不区分大小写。\n\n这部分教程我想偷懒跳过了，可以自行查看[官方教程](https://pages.github.com/)。\n\n## 0x11 预览和发布\n\n在blog-dev目录下执行`hexo new '博客标题'`即可创建一篇新的博客，使用markdown语法进行编辑。\n\n编辑完毕之后，执行下述命令，可以启动一个本地的临时服务器进行预览：\n\n```bash\nhexo server # 启动本地预览服务\n```\n\n在浏览器中打开`localhost:4000`，即可预览你的博客。\n\n配置blog-dev的发布路径，编辑blog-dev/_config.yml文件，一般在文件末尾，有一个deploy字段，把第三节创建的github page仓库路径配置上去即可，如果deploy字段下只有一个type，则手动添加其他字段（注意yml文件遵从yaml格式缩紧）。例如我的配置就是：\n\n```yaml\ndeploy:                                                                                                          \n  type: git\n  repo: https://github.com/ChinoMars/chinomars.github.io.git\n  branch: master\n```\n\n依次执行下述命令，即可发布你的静态站点：\n\n```bash\nhexo clean # 清除缓存\nhexo generate # 生成站点的静态文件\nhexo deploy # 自动push到github page所在的master分支，进行发布\n```\n\n最后，可以打开网址：`https://username.github.io`即可查看个人的站点。","source":"_posts/基于Hexo和github-page搭建个人博客.md","raw":"---\ntitle: 基于Hexo和github page搭建个人博客\ndate: 2020-01-29 19:46:47\ntags: 小白\n---\n\n倒腾过好几次个人主页，但个人原创文章并不多，总是要么在换模板的路上，要不就是在换框架的路上，终于乐此而疲了。这次换个人主页之后还是要静下心来多写文章才是。这篇文章用于答谢Hexo和Archer主题的作者，hexo是到目前为止用过的最好用的博客框架，archer主题模板是目前个人比较喜欢的一款模版。\n\n废话不多说，按照个人习惯，分四段简单介绍下如何基于Hexo和Github Page搭建个人主页。\n\n> 本文不严格区分*nix系统和windows系统，所有命令均可在terminal或者gitbash中执行。\n\n## 0x00 准备\n\nhexo是一个静态站点生成工具，集创建（初始化站点）、开发（指的是写博客）、发布博客文章功能于一体，十分方便。\n\n搭建博客站点先准备以下平台的账号和开发环境：\n\n- 注册github账户，[链接](https://github.com/)\n\n- 安装git，并在github账户中配置sshkey：*nix系统一般自带git，windows系统安装gitbash，[下载地址](https://gitforwindows.org/)\n\n- 配置sshkey：\n\n  - 生成sshkey：*nix系统中打开terminal，windows系统中打开gitbash，参考[教程](https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh)，执行以下命令，\n\n    ```bash\n    cd ~ && ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" # your_email@example.com替换为你注册github的邮箱，可以一直按回车生成默认的文件名，方便阅读后续的步骤\n    ```\n\n  - 执行以下命令，拷贝出你的public key，将屏幕中输出的公钥内容`ctrl+c`进行拷贝：\n\n    ```bash\n    cd ~/.ssh/ && cat id_rsa.pub # 这里的id_rsa.pub为上一步生成的密钥对中的公钥\n    ```\n\n  - 打开github中配置sshkey的界面，[链接](https://github.com/settings/keys)，选择`New SSH key`，把拷贝的公钥配置上去即可。\n\n- 安装Nodejs，[下载地址](https://nodejs.org/zh-cn/)，安装成功后会同时安装好node和npm两个工具，并为npm配置国内源，例如配置淘宝源可以执行下述命令：\n\n  ```bash\n  npm config set registry https://registry.npm.taobao.org\n  ```\n\n- 安装hexo，执行下述命令\n\n  ```bash\n  npm install hexo-cli -g # install hexo\n  hexo -v # check whether successfully installed\n  ```\n\n## 0x01 初始化站点\n\n执行以下命令来初始化博客站点，会创建一个新的目录，以blog-dev为例，执行：\n\n```bash\nhexo init blog-dev\n```\n\n待命令执行完毕，会新建一个blog-dev目录，进入该目录中，我们可以看到以下目录树：\n\n```bash\nblog-dev\n├── _config.yml        #---------------- 站点配置文件\n├── node_modules       #---------------- npm安装包本地保存目录\n├── package-lock.json\n├── package.json       #---------------- 依赖包配置文件\n├── scaffolds\n├── source             #---------------- 博客文章保存目录\n└── themes             #---------------- 博客主题保存目录\n```\n\n此时，进入到blog-dev目录，可以执行hexo的相关参数及命令，可以进行站点的管理，简单介绍如下：\n\n```bash\nhexo clean # 清除缓存\nhexo generate # 生成网站静态文件\nhexo server # 启动本地调试模式，默认可以打开localhost:4000查看网站效果\nhexo deploy # 发布到GitHub Page，第0x11节会具体介绍\n```\n\nhexo还有一个非常方便的点是主题套用十分方便，将想要的模板下载下来，放到themes目录下，然后修改_config.yml文件中的theme字段，改为下载下来的主题目录名即可。主题可以在[官方网站下载](https://hexo.io/themes/)，也可以自行从各种渠道获取。\n\n## 0x10 创建github page\n\n本节内容大家应该都比较熟悉，创建作为个人主页用的github page，必须将仓名命名为username.github.com，经过测试，仓名中的username与你的github账号名可以不区分大小写。\n\n这部分教程我想偷懒跳过了，可以自行查看[官方教程](https://pages.github.com/)。\n\n## 0x11 预览和发布\n\n在blog-dev目录下执行`hexo new '博客标题'`即可创建一篇新的博客，使用markdown语法进行编辑。\n\n编辑完毕之后，执行下述命令，可以启动一个本地的临时服务器进行预览：\n\n```bash\nhexo server # 启动本地预览服务\n```\n\n在浏览器中打开`localhost:4000`，即可预览你的博客。\n\n配置blog-dev的发布路径，编辑blog-dev/_config.yml文件，一般在文件末尾，有一个deploy字段，把第三节创建的github page仓库路径配置上去即可，如果deploy字段下只有一个type，则手动添加其他字段（注意yml文件遵从yaml格式缩紧）。例如我的配置就是：\n\n```yaml\ndeploy:                                                                                                          \n  type: git\n  repo: https://github.com/ChinoMars/chinomars.github.io.git\n  branch: master\n```\n\n依次执行下述命令，即可发布你的静态站点：\n\n```bash\nhexo clean # 清除缓存\nhexo generate # 生成站点的静态文件\nhexo deploy # 自动push到github page所在的master分支，进行发布\n```\n\n最后，可以打开网址：`https://username.github.io`即可查看个人的站点。","slug":"基于Hexo和github-page搭建个人博客","published":1,"updated":"2020-01-30T06:26:03.234Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck60d786j0001dipodr1w84bi","content":"<p>倒腾过好几次个人主页，但个人原创文章并不多，总是要么在换模板的路上，要不就是在换框架的路上，终于乐此而疲了。这次换个人主页之后还是要静下心来多写文章才是。这篇文章用于答谢Hexo和Archer主题的作者，hexo是到目前为止用过的最好用的博客框架，archer主题模板是目前个人比较喜欢的一款模版。</p>\n<p>废话不多说，按照个人习惯，分四段简单介绍下如何基于Hexo和Github Page搭建个人主页。</p>\n<blockquote>\n<p>本文不严格区分*nix系统和windows系统，所有命令均可在terminal或者gitbash中执行。</p>\n</blockquote>\n<h2 id=\"0x00-准备\"><a href=\"#0x00-准备\" class=\"headerlink\" title=\"0x00 准备\"></a>0x00 准备</h2><p>hexo是一个静态站点生成工具，集创建（初始化站点）、开发（指的是写博客）、发布博客文章功能于一体，十分方便。</p>\n<p>搭建博客站点先准备以下平台的账号和开发环境：</p>\n<ul>\n<li><p>注册github账户，<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n</li>\n<li><p>安装git，并在github账户中配置sshkey：*nix系统一般自带git，windows系统安装gitbash，<a href=\"https://gitforwindows.org/\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n</li>\n<li><p>配置sshkey：</p>\n<ul>\n<li><p>生成sshkey：*nix系统中打开terminal，windows系统中打开gitbash，参考<a href=\"https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh\" target=\"_blank\" rel=\"noopener\">教程</a>，执行以下命令，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~ &amp;&amp; ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"your_email@example.com\"</span> <span class=\"comment\"># your_email@example.com替换为你注册github的邮箱，可以一直按回车生成默认的文件名，方便阅读后续的步骤</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行以下命令，拷贝出你的public key，将屏幕中输出的公钥内容<code>ctrl+c</code>进行拷贝：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.ssh/ &amp;&amp; cat id_rsa.pub <span class=\"comment\"># 这里的id_rsa.pub为上一步生成的密钥对中的公钥</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开github中配置sshkey的界面，<a href=\"https://github.com/settings/keys\" target=\"_blank\" rel=\"noopener\">链接</a>，选择<code>New SSH key</code>，把拷贝的公钥配置上去即可。</p>\n</li>\n</ul>\n</li>\n<li><p>安装Nodejs，<a href=\"https://nodejs.org/zh-cn/\" target=\"_blank\" rel=\"noopener\">下载地址</a>，安装成功后会同时安装好node和npm两个工具，并为npm配置国内源，例如配置淘宝源可以执行下述命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装hexo，执行下述命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g <span class=\"comment\"># install hexo</span></span><br><span class=\"line\">hexo -v <span class=\"comment\"># check whether successfully installed</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"0x01-初始化站点\"><a href=\"#0x01-初始化站点\" class=\"headerlink\" title=\"0x01 初始化站点\"></a>0x01 初始化站点</h2><p>执行以下命令来初始化博客站点，会创建一个新的目录，以blog-dev为例，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog-dev</span><br></pre></td></tr></table></figure>\n\n<p>待命令执行完毕，会新建一个blog-dev目录，进入该目录中，我们可以看到以下目录树：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blog-dev</span><br><span class=\"line\">├── _config.yml        <span class=\"comment\">#---------------- 站点配置文件</span></span><br><span class=\"line\">├── node_modules       <span class=\"comment\">#---------------- npm安装包本地保存目录</span></span><br><span class=\"line\">├── package-lock.json</span><br><span class=\"line\">├── package.json       <span class=\"comment\">#---------------- 依赖包配置文件</span></span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── <span class=\"built_in\">source</span>             <span class=\"comment\">#---------------- 博客文章保存目录</span></span><br><span class=\"line\">└── themes             <span class=\"comment\">#---------------- 博客主题保存目录</span></span><br></pre></td></tr></table></figure>\n\n<p>此时，进入到blog-dev目录，可以执行hexo的相关参数及命令，可以进行站点的管理，简单介绍如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean <span class=\"comment\"># 清除缓存</span></span><br><span class=\"line\">hexo generate <span class=\"comment\"># 生成网站静态文件</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># 启动本地调试模式，默认可以打开localhost:4000查看网站效果</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># 发布到GitHub Page，第0x11节会具体介绍</span></span><br></pre></td></tr></table></figure>\n\n<p>hexo还有一个非常方便的点是主题套用十分方便，将想要的模板下载下来，放到themes目录下，然后修改_config.yml文件中的theme字段，改为下载下来的主题目录名即可。主题可以在<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">官方网站下载</a>，也可以自行从各种渠道获取。</p>\n<h2 id=\"0x10-创建github-page\"><a href=\"#0x10-创建github-page\" class=\"headerlink\" title=\"0x10 创建github page\"></a>0x10 创建github page</h2><p>本节内容大家应该都比较熟悉，创建作为个人主页用的github page，必须将仓名命名为username.github.com，经过测试，仓名中的username与你的github账号名可以不区分大小写。</p>\n<p>这部分教程我想偷懒跳过了，可以自行查看<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">官方教程</a>。</p>\n<h2 id=\"0x11-预览和发布\"><a href=\"#0x11-预览和发布\" class=\"headerlink\" title=\"0x11 预览和发布\"></a>0x11 预览和发布</h2><p>在blog-dev目录下执行<code>hexo new &#39;博客标题&#39;</code>即可创建一篇新的博客，使用markdown语法进行编辑。</p>\n<p>编辑完毕之后，执行下述命令，可以启动一个本地的临时服务器进行预览：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server <span class=\"comment\"># 启动本地预览服务</span></span><br></pre></td></tr></table></figure>\n\n<p>在浏览器中打开<code>localhost:4000</code>，即可预览你的博客。</p>\n<p>配置blog-dev的发布路径，编辑blog-dev/_config.yml文件，一般在文件末尾，有一个deploy字段，把第三节创建的github page仓库路径配置上去即可，如果deploy字段下只有一个type，则手动添加其他字段（注意yml文件遵从yaml格式缩紧）。例如我的配置就是：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span>                                                                                                          </span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/ChinoMars/chinomars.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>依次执行下述命令，即可发布你的静态站点：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean <span class=\"comment\"># 清除缓存</span></span><br><span class=\"line\">hexo generate <span class=\"comment\"># 生成站点的静态文件</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># 自动push到github page所在的master分支，进行发布</span></span><br></pre></td></tr></table></figure>\n\n<p>最后，可以打开网址：<code>https://username.github.io</code>即可查看个人的站点。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>倒腾过好几次个人主页，但个人原创文章并不多，总是要么在换模板的路上，要不就是在换框架的路上，终于乐此而疲了。这次换个人主页之后还是要静下心来多写文章才是。这篇文章用于答谢Hexo和Archer主题的作者，hexo是到目前为止用过的最好用的博客框架，archer主题模板是目前个人比较喜欢的一款模版。</p>\n<p>废话不多说，按照个人习惯，分四段简单介绍下如何基于Hexo和Github Page搭建个人主页。</p>\n<blockquote>\n<p>本文不严格区分*nix系统和windows系统，所有命令均可在terminal或者gitbash中执行。</p>\n</blockquote>\n<h2 id=\"0x00-准备\"><a href=\"#0x00-准备\" class=\"headerlink\" title=\"0x00 准备\"></a>0x00 准备</h2><p>hexo是一个静态站点生成工具，集创建（初始化站点）、开发（指的是写博客）、发布博客文章功能于一体，十分方便。</p>\n<p>搭建博客站点先准备以下平台的账号和开发环境：</p>\n<ul>\n<li><p>注册github账户，<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">链接</a></p>\n</li>\n<li><p>安装git，并在github账户中配置sshkey：*nix系统一般自带git，windows系统安装gitbash，<a href=\"https://gitforwindows.org/\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n</li>\n<li><p>配置sshkey：</p>\n<ul>\n<li><p>生成sshkey：*nix系统中打开terminal，windows系统中打开gitbash，参考<a href=\"https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh\" target=\"_blank\" rel=\"noopener\">教程</a>，执行以下命令，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~ &amp;&amp; ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"your_email@example.com\"</span> <span class=\"comment\"># your_email@example.com替换为你注册github的邮箱，可以一直按回车生成默认的文件名，方便阅读后续的步骤</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行以下命令，拷贝出你的public key，将屏幕中输出的公钥内容<code>ctrl+c</code>进行拷贝：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.ssh/ &amp;&amp; cat id_rsa.pub <span class=\"comment\"># 这里的id_rsa.pub为上一步生成的密钥对中的公钥</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开github中配置sshkey的界面，<a href=\"https://github.com/settings/keys\" target=\"_blank\" rel=\"noopener\">链接</a>，选择<code>New SSH key</code>，把拷贝的公钥配置上去即可。</p>\n</li>\n</ul>\n</li>\n<li><p>安装Nodejs，<a href=\"https://nodejs.org/zh-cn/\" target=\"_blank\" rel=\"noopener\">下载地址</a>，安装成功后会同时安装好node和npm两个工具，并为npm配置国内源，例如配置淘宝源可以执行下述命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装hexo，执行下述命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g <span class=\"comment\"># install hexo</span></span><br><span class=\"line\">hexo -v <span class=\"comment\"># check whether successfully installed</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"0x01-初始化站点\"><a href=\"#0x01-初始化站点\" class=\"headerlink\" title=\"0x01 初始化站点\"></a>0x01 初始化站点</h2><p>执行以下命令来初始化博客站点，会创建一个新的目录，以blog-dev为例，执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog-dev</span><br></pre></td></tr></table></figure>\n\n<p>待命令执行完毕，会新建一个blog-dev目录，进入该目录中，我们可以看到以下目录树：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blog-dev</span><br><span class=\"line\">├── _config.yml        <span class=\"comment\">#---------------- 站点配置文件</span></span><br><span class=\"line\">├── node_modules       <span class=\"comment\">#---------------- npm安装包本地保存目录</span></span><br><span class=\"line\">├── package-lock.json</span><br><span class=\"line\">├── package.json       <span class=\"comment\">#---------------- 依赖包配置文件</span></span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── <span class=\"built_in\">source</span>             <span class=\"comment\">#---------------- 博客文章保存目录</span></span><br><span class=\"line\">└── themes             <span class=\"comment\">#---------------- 博客主题保存目录</span></span><br></pre></td></tr></table></figure>\n\n<p>此时，进入到blog-dev目录，可以执行hexo的相关参数及命令，可以进行站点的管理，简单介绍如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean <span class=\"comment\"># 清除缓存</span></span><br><span class=\"line\">hexo generate <span class=\"comment\"># 生成网站静态文件</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># 启动本地调试模式，默认可以打开localhost:4000查看网站效果</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># 发布到GitHub Page，第0x11节会具体介绍</span></span><br></pre></td></tr></table></figure>\n\n<p>hexo还有一个非常方便的点是主题套用十分方便，将想要的模板下载下来，放到themes目录下，然后修改_config.yml文件中的theme字段，改为下载下来的主题目录名即可。主题可以在<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">官方网站下载</a>，也可以自行从各种渠道获取。</p>\n<h2 id=\"0x10-创建github-page\"><a href=\"#0x10-创建github-page\" class=\"headerlink\" title=\"0x10 创建github page\"></a>0x10 创建github page</h2><p>本节内容大家应该都比较熟悉，创建作为个人主页用的github page，必须将仓名命名为username.github.com，经过测试，仓名中的username与你的github账号名可以不区分大小写。</p>\n<p>这部分教程我想偷懒跳过了，可以自行查看<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">官方教程</a>。</p>\n<h2 id=\"0x11-预览和发布\"><a href=\"#0x11-预览和发布\" class=\"headerlink\" title=\"0x11 预览和发布\"></a>0x11 预览和发布</h2><p>在blog-dev目录下执行<code>hexo new &#39;博客标题&#39;</code>即可创建一篇新的博客，使用markdown语法进行编辑。</p>\n<p>编辑完毕之后，执行下述命令，可以启动一个本地的临时服务器进行预览：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo server <span class=\"comment\"># 启动本地预览服务</span></span><br></pre></td></tr></table></figure>\n\n<p>在浏览器中打开<code>localhost:4000</code>，即可预览你的博客。</p>\n<p>配置blog-dev的发布路径，编辑blog-dev/_config.yml文件，一般在文件末尾，有一个deploy字段，把第三节创建的github page仓库路径配置上去即可，如果deploy字段下只有一个type，则手动添加其他字段（注意yml文件遵从yaml格式缩紧）。例如我的配置就是：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span>                                                                                                          </span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/ChinoMars/chinomars.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>依次执行下述命令，即可发布你的静态站点：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean <span class=\"comment\"># 清除缓存</span></span><br><span class=\"line\">hexo generate <span class=\"comment\"># 生成站点的静态文件</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># 自动push到github page所在的master分支，进行发布</span></span><br></pre></td></tr></table></figure>\n\n<p>最后，可以打开网址：<code>https://username.github.io</code>即可查看个人的站点。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ck60d786j0001dipodr1w84bi","tag_id":"ck60d786o0003dipo03ki3b0v","_id":"ck60d786q0004dipo8w9c6wtb"}],"Tag":[{"name":"小白","_id":"ck60d786o0003dipo03ki3b0v"}]}}